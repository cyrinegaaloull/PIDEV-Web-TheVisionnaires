{% extends 'front_office/base-front-office.html.twig' %}

{% block title %}Détails de la publication{% endblock %}

{% block body %}
    <!-- Hero Section -->
    <section class="hero-section">
        <div class="hero-overlay"></div>
        <div class="container hero-content">
            <div class="row">
                <div class="col-md-8">
                    <h1 class="hero-title">{{ post.title }}</h1>
                    <p class="hero-subtitle">Publié dans la catégorie: {{ post.category }}</p>


                </div>
            </div>
        </div>
    </section>

    <style>
        /* Hero Section Styling */
        .hero-section {
            background-image: url('{{ asset('assets/front_office/images/Web-Bg.jpg') }}');
            background-size: cover;
            background-position: center;
            color: white;
            padding: 100px 0;
            position: relative;
            margin-bottom: 50px;
        }

        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .hero-content {
            position: relative;
            z-index: 1;
        }

        .hero-title {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 20px;
            color: white;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
        }

        .hero-subtitle {
            font-size: 1.2rem;
            margin-bottom: 30px;
            color: white;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        }

        /* Post Details Styling */
        .post-details {
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 30px;
        }

        .post-details h2 {
            font-size: 1.8rem;
            margin-bottom: 15px;
            color: #333;
        }

        .post-details p {
            font-size: 1rem;
            color: #555;
            line-height: 1.6;
        }

        /* Comments Section */
        .comments-section {
            background: #f9f9f9;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .comment {
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .comment:last-child {
            border-bottom: none;
        }

        .comment-author {
            font-weight: bold;
            color: #333;
        }

        .comment-content {
            margin-top: 5px;
            color: #555;
        }

        /* Comment Form Styling */
        .comment-form {
            margin-top: 20px;
        }

        .comment-form textarea {
            width: 100%;
            height: 100px;
            border-radius: 5px;
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }

        .comment-form button {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }

        .comment-form button:hover {
            background: #0056b3;
        }
    </style>

    <!-- Post Details Section -->
    <div class="container posts-container mb-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="post-details glass-card">
                    <form method="get" action="{{ path('report_post', {'postId': post.postId}) }}" style="display: inline-block;">
                        <button type="submit" class="btn btn-warning btn-sm">Report Post</button>
                    </form>
                    <h2>{{ post.title }}</h2>
                    <p><strong>Contenu:</strong> {{ post.content }}</p>
                    <p><strong>Catégorie:</strong> {{ post.category }}</p>
                    <p><strong>ID de l'utilisateur:</strong> {{ post.userId }}</p>
                </div>

                <!-- Add New Comment -->
                <div class="comment-form mt-4">
                    <h3>Ajouter un commentaire</h3>
                    <form method="post">
                        {{ form_widget(form) }}
                        <button type="submit" class="btn btn-primary">Publier</button>
                    </form>
                </div>

                <!-- Display Existing Comments -->
                <div class="comments-section glass-card mt-4">
                    <h3>Commentaires</h3>

                    {% if post.comments|length > 0 %}
                        {% for comment in post.comments %}
                            <div class="comment" id="comment-{{ comment.commentId }}">
                                <div class="comment-author">Utilisateur ID: {{ comment.userId }}</div>
                                <div class="comment-content" id="content-{{ comment.commentId }}">{{ comment.content }}</div>
                                <div class="comment-actions mt-2">
                                    <!-- Edit Button -->
                                    <a href="#" class="btn btn-sm btn-primary me-2 edit-btn"
                                       data-comment-id="{{ comment.commentId }}"
                                       data-original-content="{{ comment.content|e('js') }}"
                                       data-csrf-token="{{ csrf_token('edit-comment' ~ comment.commentId) }}">
                                        Modifier
                                    </a>

                                    <!-- Delete Button -->
                                    <form action="{{ path('app_comment_delete', {'commentId': comment.commentId}) }}" method="post" style="display: inline-block;">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete-comment' ~ comment.commentId) }}">
                                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Voulez-vous vraiment supprimer ce commentaire ?')">Supprimer</button>
                                    </form>
                                </div>
                            </div>
                        {% endfor %}
                    {% else %}
                        <p>Aucun commentaire pour cette publication.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const editButtons = document.querySelectorAll('.edit-btn');

            editButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();

                    const commentId = this.dataset.commentId;
                    const commentContentDiv = document.getElementById(`content-${commentId}`);
                    const actionsDiv = this.parentElement;
                    const csrfToken = this.dataset.csrfToken;
                    const originalContent = this.dataset.originalContent;

                    // Prevent double editing
                    if (commentContentDiv.querySelector('textarea')) return;

                    // Create textarea
                    const textarea = document.createElement('textarea');
                    textarea.value = originalContent;
                    textarea.style.width = '100%';
                    textarea.style.height = '80px';
                    textarea.style.borderRadius = '5px';
                    textarea.style.border = '1px solid #ddd';
                    textarea.style.padding = '10px';
                    textarea.style.marginBottom = '10px';

                    commentContentDiv.innerHTML = '';
                    commentContentDiv.appendChild(textarea);

                    // Create confirm and cancel buttons
                    const confirmButton = document.createElement('button');
                    confirmButton.textContent = 'Confirmer';
                    confirmButton.className = 'btn btn-sm btn-success me-2';

                    const cancelButton = document.createElement('button');
                    cancelButton.textContent = 'Annuler';
                    cancelButton.className = 'btn btn-sm btn-secondary';

                    actionsDiv.removeChild(this);
                    actionsDiv.prepend(confirmButton);
                    actionsDiv.appendChild(cancelButton);

                    confirmButton.addEventListener('click', function () {
                        const newContent = textarea.value.trim();
                        if (newContent === '') {
                            alert('Le contenu du commentaire ne peut pas être vide.');
                            return;
                        }

                        fetch(`/post/comment/${commentId}/edit`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-CSRF-TOKEN': csrfToken,
                            },
                            body: JSON.stringify({ content: newContent }),
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error("Erreur serveur.");
                                }
                                return response.json();
                            })
                            .then(data => {
                                if (data.success) {
                                    commentContentDiv.innerHTML = newContent;
                                    actionsDiv.removeChild(confirmButton);
                                    actionsDiv.removeChild(cancelButton);
                                    actionsDiv.prepend(button);
                                } else {
                                    alert(data.error || 'Une erreur est survenue.');
                                }
                            })
                            .catch(error => {
                                alert(error.message);
                            });
                    });

                    cancelButton.addEventListener('click', function () {
                        commentContentDiv.innerHTML = originalContent;
                        actionsDiv.removeChild(confirmButton);
                        actionsDiv.removeChild(cancelButton);
                        actionsDiv.prepend(button);
                    });
                });
            });
        });
    </script>
{% endblock %}