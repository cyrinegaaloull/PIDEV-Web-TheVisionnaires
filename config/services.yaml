# config/services.yaml
parameters:
    avatars_directory: '%kernel.project_dir%/public/uploads/avatars'
    your_upload_directory: '%kernel.project_dir%/public/assets/exploration/images'
    uploads_directory: '%kernel.project_dir%/public/uploads'
    uploads_directory_web: '/uploads'
    # Add the OpenRouter API key parameter
    openrouter_api_key: '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'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $secretKey: '%env(EWZ_RECAPTCHA_SECRET_KEY)%'

    Doctrine\Common\Annotations\AnnotationReader:
        class: Doctrine\Common\Annotations\AnnotationReader
        public: true

    annotation_reader:
        alias: Doctrine\Common\Annotations\AnnotationReader

    # makes classes in src/ available to be used as services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Explicitly configure LocationController
    App\Controller\front_office\assistance\LocationController:
        arguments:
            $foursquareApiKey: "%env(FOURSQUARE_API_KEY)%"
            $cache: "@cache.app"

    # Updated NotificationService without Twilio parameters
    App\Service\NotificationService:
        public: true

    Symfony\Contracts\HttpClient\HttpClientInterface: '@http_client'

    App\Service\GeocodingService:
        arguments:
            $providerAggregator: '@bazinga_geocoder.geocoder'

    App\EventListener\RecaptchaValidationListener:
        arguments:
            $secretKey: '%env(EWZ_RECAPTCHA_SECRET_KEY)%'
        tags:
            - { name: 'kernel.event_subscriber' }

    # ChatbotService definition
    App\Service\ChatbotService:

    # Define the login listener service explicitly
    App\EventListener\LoginSuccessListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login', method: 'onSecurityInteractiveLogin' }

symfonycasts_reset_password:
    request_password_repository: App\Repository\ResetPasswordRequestRepository